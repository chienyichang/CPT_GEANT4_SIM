//
// File generated by /share/apps/root_v5.34.09/bin/rootcint at Wed Jun 18 16:04:34 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIchienyidIcrystal_timingdIbuilddILXeDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LXeDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::trackData trackData;
      #else
      class trackData  {
         public:
         //friend XX;
         float time; //
         float energy; //
         float position; //
         int creator; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::stepData stepData;
      #else
      class stepData  {
         public:
         //friend XX;
         float time; //
         float energy; //
         float positionX; //
         float positionY; //
         float positionZ; //
         int particle; //
         int creator; //
         int absorbed; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void trackData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void trackData_Dictionary();
   static void *new_trackData(void *p = 0);
   static void *newArray_trackData(Long_t size, void *p);
   static void delete_trackData(void *p);
   static void deleteArray_trackData(void *p);
   static void destruct_trackData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::trackData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::trackData) == sizeof(::ROOT::Shadow::trackData));
      ::trackData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::trackData),0);
      static ::ROOT::TGenericClassInfo 
         instance("trackData", "./../include/Data.hh", 1,
                  typeid(::trackData), DefineBehavior(ptr, ptr),
                  &trackData_ShowMembers, &trackData_Dictionary, isa_proxy, 4,
                  sizeof(::trackData) );
      instance.SetNew(&new_trackData);
      instance.SetNewArray(&newArray_trackData);
      instance.SetDelete(&delete_trackData);
      instance.SetDeleteArray(&deleteArray_trackData);
      instance.SetDestructor(&destruct_trackData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::trackData*)
   {
      return GenerateInitInstanceLocal((::trackData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::trackData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void trackData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::trackData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void stepData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void stepData_Dictionary();
   static void *new_stepData(void *p = 0);
   static void *newArray_stepData(Long_t size, void *p);
   static void delete_stepData(void *p);
   static void deleteArray_stepData(void *p);
   static void destruct_stepData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::stepData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::stepData) == sizeof(::ROOT::Shadow::stepData));
      ::stepData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::stepData),0);
      static ::ROOT::TGenericClassInfo 
         instance("stepData", "./../include/Data.hh", 6,
                  typeid(::stepData), DefineBehavior(ptr, ptr),
                  &stepData_ShowMembers, &stepData_Dictionary, isa_proxy, 4,
                  sizeof(::stepData) );
      instance.SetNew(&new_stepData);
      instance.SetNewArray(&newArray_stepData);
      instance.SetDelete(&delete_stepData);
      instance.SetDeleteArray(&deleteArray_stepData);
      instance.SetDestructor(&destruct_stepData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::stepData*)
   {
      return GenerateInitInstanceLocal((::stepData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::stepData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void stepData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::stepData*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
namespace ROOT {
   void trackData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class trackData.
      typedef ::ROOT::Shadow::trackData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::trackData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &sobj->time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &sobj->energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "position", &sobj->position);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "creator", &sobj->creator);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_trackData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::trackData : new ::trackData;
   }
   static void *newArray_trackData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::trackData[nElements] : new ::trackData[nElements];
   }
   // Wrapper around operator delete
   static void delete_trackData(void *p) {
      delete ((::trackData*)p);
   }
   static void deleteArray_trackData(void *p) {
      delete [] ((::trackData*)p);
   }
   static void destruct_trackData(void *p) {
      typedef ::trackData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::trackData

//______________________________________________________________________________
namespace ROOT {
   void stepData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class stepData.
      typedef ::ROOT::Shadow::stepData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::stepData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &sobj->time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &sobj->energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionX", &sobj->positionX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionY", &sobj->positionY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "positionZ", &sobj->positionZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &sobj->particle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "creator", &sobj->creator);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "absorbed", &sobj->absorbed);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_stepData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::stepData : new ::stepData;
   }
   static void *newArray_stepData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::stepData[nElements] : new ::stepData[nElements];
   }
   // Wrapper around operator delete
   static void delete_stepData(void *p) {
      delete ((::stepData*)p);
   }
   static void deleteArray_stepData(void *p) {
      delete [] ((::stepData*)p);
   }
   static void destruct_stepData(void *p) {
      typedef ::stepData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::stepData

namespace ROOT {
   void vectorlEstepDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstepDatagR_Dictionary();
   static void *new_vectorlEstepDatagR(void *p = 0);
   static void *newArray_vectorlEstepDatagR(Long_t size, void *p);
   static void delete_vectorlEstepDatagR(void *p);
   static void deleteArray_vectorlEstepDatagR(void *p);
   static void destruct_vectorlEstepDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<stepData>*)
   {
      vector<stepData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<stepData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<stepData>", -2, "prec_stl/vector", 49,
                  typeid(vector<stepData>), DefineBehavior(ptr, ptr),
                  0, &vectorlEstepDatagR_Dictionary, isa_proxy, 4,
                  sizeof(vector<stepData>) );
      instance.SetNew(&new_vectorlEstepDatagR);
      instance.SetNewArray(&newArray_vectorlEstepDatagR);
      instance.SetDelete(&delete_vectorlEstepDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlEstepDatagR);
      instance.SetDestructor(&destruct_vectorlEstepDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<stepData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<stepData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstepDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<stepData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEstepDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<stepData> : new vector<stepData>;
   }
   static void *newArray_vectorlEstepDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<stepData>[nElements] : new vector<stepData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstepDatagR(void *p) {
      delete ((vector<stepData>*)p);
   }
   static void deleteArray_vectorlEstepDatagR(void *p) {
      delete [] ((vector<stepData>*)p);
   }
   static void destruct_vectorlEstepDatagR(void *p) {
      typedef vector<stepData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<stepData>

namespace ROOT {
   void vectorlEtrackDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEtrackDatagR_Dictionary();
   static void *new_vectorlEtrackDatagR(void *p = 0);
   static void *newArray_vectorlEtrackDatagR(Long_t size, void *p);
   static void delete_vectorlEtrackDatagR(void *p);
   static void deleteArray_vectorlEtrackDatagR(void *p);
   static void destruct_vectorlEtrackDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<trackData>*)
   {
      vector<trackData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<trackData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<trackData>", -2, "prec_stl/vector", 49,
                  typeid(vector<trackData>), DefineBehavior(ptr, ptr),
                  0, &vectorlEtrackDatagR_Dictionary, isa_proxy, 4,
                  sizeof(vector<trackData>) );
      instance.SetNew(&new_vectorlEtrackDatagR);
      instance.SetNewArray(&newArray_vectorlEtrackDatagR);
      instance.SetDelete(&delete_vectorlEtrackDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlEtrackDatagR);
      instance.SetDestructor(&destruct_vectorlEtrackDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<trackData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<trackData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEtrackDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<trackData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEtrackDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<trackData> : new vector<trackData>;
   }
   static void *newArray_vectorlEtrackDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<trackData>[nElements] : new vector<trackData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEtrackDatagR(void *p) {
      delete ((vector<trackData>*)p);
   }
   static void deleteArray_vectorlEtrackDatagR(void *p) {
      delete [] ((vector<trackData>*)p);
   }
   static void destruct_vectorlEtrackDatagR(void *p) {
      typedef vector<trackData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<trackData>

/********************************************************
* /home/chienyi/crystal_timing/build/LXeDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLXeDict();

extern "C" void G__set_cpp_environmentLXeDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("../include/Data.hh");
  G__cpp_reset_tagtableLXeDict();
}
#include <new>
extern "C" int G__cpp_dllrevLXeDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* trackData */
// automatic default constructor
static int G__LXeDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   trackData *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new trackData[n];
     } else {
       p = new((void*) gvp) trackData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new trackData;
     } else {
       p = new((void*) gvp) trackData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_trackData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LXeDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   trackData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new trackData(*(trackData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_trackData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef trackData G__TtrackData;
static int G__LXeDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (trackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((trackData*) (soff+(sizeof(trackData)*i)))->~G__TtrackData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (trackData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((trackData*) (soff))->~G__TtrackData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LXeDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   trackData* dest = (trackData*) G__getstructoffset();
   *dest = *(trackData*) libp->para[0].ref;
   const trackData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* stepData */
// automatic default constructor
static int G__LXeDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   stepData *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new stepData[n];
     } else {
       p = new((void*) gvp) stepData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new stepData;
     } else {
       p = new((void*) gvp) stepData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_stepData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LXeDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   stepData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new stepData(*(stepData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_stepData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef stepData G__TstepData;
static int G__LXeDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (stepData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((stepData*) (soff+(sizeof(stepData)*i)))->~G__TstepData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (stepData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((stepData*) (soff))->~G__TstepData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LXeDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   stepData* dest = (stepData*) G__getstructoffset();
   *dest = *(stepData*) libp->para[0].ref;
   const stepData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<trackData,allocator<trackData> > */
static int G__LXeDict_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<trackData,allocator<trackData> >::reference obj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->at((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::const_reference obj = ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->at((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::iterator* pobj;
         vector<trackData,allocator<trackData> >::iterator xobj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->begin();
         pobj = new vector<trackData,allocator<trackData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::iterator* pobj;
         vector<trackData,allocator<trackData> >::iterator xobj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->end();
         pobj = new vector<trackData,allocator<trackData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::reverse_iterator* pobj;
         vector<trackData,allocator<trackData> >::reverse_iterator xobj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->rbegin();
         pobj = new vector<trackData,allocator<trackData> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::reverse_iterator* pobj;
         vector<trackData,allocator<trackData> >::reverse_iterator xobj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->rend();
         pobj = new vector<trackData,allocator<trackData> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->resize((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->resize((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]), *((trackData*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<trackData,allocator<trackData> >::reference obj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->operator[]((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::const_reference obj = ((const vector<trackData,allocator<trackData> >*) G__getstructoffset())->operator[]((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<trackData,allocator<trackData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<trackData,allocator<trackData> >[n];
     } else {
       p = new((void*) gvp) vector<trackData,allocator<trackData> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<trackData,allocator<trackData> >;
     } else {
       p = new((void*) gvp) vector<trackData,allocator<trackData> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<trackData,allocator<trackData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<trackData,allocator<trackData> >((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]), *(trackData*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<trackData,allocator<trackData> >((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]), *(trackData*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<trackData,allocator<trackData> >((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<trackData,allocator<trackData> >((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<trackData,allocator<trackData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<trackData,allocator<trackData> >(*(vector<trackData,allocator<trackData> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<trackData,allocator<trackData> >(*(vector<trackData,allocator<trackData> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<trackData,allocator<trackData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<trackData,allocator<trackData> >(*((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[0])), *((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<trackData,allocator<trackData> >(*((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[0])), *((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<trackData,allocator<trackData> >& obj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->operator=(*(vector<trackData,allocator<trackData> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->reserve((vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const trackData& obj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const trackData& obj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->push_back(*(trackData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->swap(*(vector<trackData,allocator<trackData> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<trackData,allocator<trackData> >::iterator* pobj;
         vector<trackData,allocator<trackData> >::iterator xobj = ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->insert(*((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[0])), *(trackData*) libp->para[1].ref);
         pobj = new vector<trackData,allocator<trackData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->insert(*((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[0])), *((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[1]))
, *((vector<trackData,allocator<trackData> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->insert(*((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[0])), (vector<trackData,allocator<trackData> >::size_type) G__int(libp->para[1])
, *(trackData*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->erase(*((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->erase(*((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[0])), *((vector<trackData,allocator<trackData> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_171_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<trackData,allocator<trackData> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<trackData,allocator<trackData> > G__TvectorlEtrackDatacOallocatorlEtrackDatagRsPgR;
static int G__LXeDict_171_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<trackData,allocator<trackData> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<trackData,allocator<trackData> >*) (soff+(sizeof(vector<trackData,allocator<trackData> >)*i)))->~G__TvectorlEtrackDatacOallocatorlEtrackDatagRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<trackData,allocator<trackData> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<trackData,allocator<trackData> >*) (soff))->~G__TvectorlEtrackDatacOallocatorlEtrackDatagRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<stepData,allocator<stepData> > */
static int G__LXeDict_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<stepData,allocator<stepData> >::reference obj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->at((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::const_reference obj = ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->at((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::iterator* pobj;
         vector<stepData,allocator<stepData> >::iterator xobj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->begin();
         pobj = new vector<stepData,allocator<stepData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::iterator* pobj;
         vector<stepData,allocator<stepData> >::iterator xobj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->end();
         pobj = new vector<stepData,allocator<stepData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::reverse_iterator* pobj;
         vector<stepData,allocator<stepData> >::reverse_iterator xobj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->rbegin();
         pobj = new vector<stepData,allocator<stepData> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::reverse_iterator* pobj;
         vector<stepData,allocator<stepData> >::reverse_iterator xobj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->rend();
         pobj = new vector<stepData,allocator<stepData> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->resize((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->resize((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]), *((stepData*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<stepData,allocator<stepData> >::reference obj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->operator[]((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::const_reference obj = ((const vector<stepData,allocator<stepData> >*) G__getstructoffset())->operator[]((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<stepData,allocator<stepData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<stepData,allocator<stepData> >[n];
     } else {
       p = new((void*) gvp) vector<stepData,allocator<stepData> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<stepData,allocator<stepData> >;
     } else {
       p = new((void*) gvp) vector<stepData,allocator<stepData> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<stepData,allocator<stepData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<stepData,allocator<stepData> >((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]), *(stepData*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<stepData,allocator<stepData> >((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]), *(stepData*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<stepData,allocator<stepData> >((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<stepData,allocator<stepData> >((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<stepData,allocator<stepData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<stepData,allocator<stepData> >(*(vector<stepData,allocator<stepData> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<stepData,allocator<stepData> >(*(vector<stepData,allocator<stepData> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<stepData,allocator<stepData> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<stepData,allocator<stepData> >(*((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[0])), *((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<stepData,allocator<stepData> >(*((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[0])), *((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<stepData,allocator<stepData> >& obj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->operator=(*(vector<stepData,allocator<stepData> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->reserve((vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const stepData& obj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const stepData& obj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->push_back(*(stepData*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->swap(*(vector<stepData,allocator<stepData> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<stepData,allocator<stepData> >::iterator* pobj;
         vector<stepData,allocator<stepData> >::iterator xobj = ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->insert(*((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[0])), *(stepData*) libp->para[1].ref);
         pobj = new vector<stepData,allocator<stepData> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->insert(*((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[0])), *((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[1]))
, *((vector<stepData,allocator<stepData> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->insert(*((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[0])), (vector<stepData,allocator<stepData> >::size_type) G__int(libp->para[1])
, *(stepData*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->erase(*((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->erase(*((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[0])), *((vector<stepData,allocator<stepData> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LXeDict_175_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<stepData,allocator<stepData> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<stepData,allocator<stepData> > G__TvectorlEstepDatacOallocatorlEstepDatagRsPgR;
static int G__LXeDict_175_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<stepData,allocator<stepData> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<stepData,allocator<stepData> >*) (soff+(sizeof(vector<stepData,allocator<stepData> >)*i)))->~G__TvectorlEstepDatacOallocatorlEstepDatagRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<stepData,allocator<stepData> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<stepData,allocator<stepData> >*) (soff))->~G__TvectorlEstepDatacOallocatorlEstepDatagRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* trackData */

/* stepData */

/* vector<trackData,allocator<trackData> > */

/* vector<stepData,allocator<stepData> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLXeDict {
 public:
  G__Sizep2memfuncLXeDict(): p(&G__Sizep2memfuncLXeDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLXeDict::*p)();
};

size_t G__get_sizep2memfuncLXeDict()
{
  G__Sizep2memfuncLXeDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLXeDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLXeDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<trackData>",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LXeDictLN_trackData),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LXeDictLN_trackData),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LXeDictLN_trackData),256,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LXeDictLN_trackData),1,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LXeDictLN_trackData),257,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<stepData>",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__LXeDictLN_stepData),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__LXeDictLN_stepData),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__LXeDictLN_stepData),256,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__LXeDictLN_stepData),1,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__LXeDictLN_stepData),257,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* trackData */
static void G__setup_memvartrackData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LXeDictLN_trackData));
   { trackData *p; p=(trackData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),102,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->position)-(long)(p)),102,0,0,-1,-1,-1,1,"position=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->creator)-(long)(p)),105,0,0,-1,-1,-1,1,"creator=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* stepData */
static void G__setup_memvarstepData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LXeDictLN_stepData));
   { stepData *p; p=(stepData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),102,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->positionX)-(long)(p)),102,0,0,-1,-1,-1,1,"positionX=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->positionY)-(long)(p)),102,0,0,-1,-1,-1,1,"positionY=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->positionZ)-(long)(p)),102,0,0,-1,-1,-1,1,"positionZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->particle)-(long)(p)),105,0,0,-1,-1,-1,1,"particle=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->creator)-(long)(p)),105,0,0,-1,-1,-1,1,"creator=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->absorbed)-(long)(p)),105,0,0,-1,-1,-1,1,"absorbed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<trackData,allocator<trackData> > */
static void G__setup_memvarvectorlEtrackDatacOallocatorlEtrackDatagRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   { vector<trackData,allocator<trackData> > *p; p=(vector<trackData,allocator<trackData> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<stepData,allocator<stepData> > */
static void G__setup_memvarvectorlEstepDatacOallocatorlEstepDatagRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   { vector<stepData,allocator<stepData> > *p; p=(vector<stepData,allocator<stepData> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLXeDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfunctrackData(void) {
   /* trackData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LXeDictLN_trackData));
   // automatic default constructor
   G__memfunc_setup("trackData", 911, G__LXeDict_168_0_1, (int) ('i'), G__get_linked_tagnum(&G__LXeDictLN_trackData), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("trackData", 911, G__LXeDict_168_0_2, (int) ('i'), G__get_linked_tagnum(&G__LXeDictLN_trackData), -1, 0, 1, 1, 1, 0, "u 'trackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~trackData", 1037, G__LXeDict_168_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LXeDict_168_0_4, (int) ('u'), G__get_linked_tagnum(&G__LXeDictLN_trackData), -1, 1, 1, 1, 1, 0, "u 'trackData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncstepData(void) {
   /* stepData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LXeDictLN_stepData));
   // automatic default constructor
   G__memfunc_setup("stepData", 822, G__LXeDict_169_0_1, (int) ('i'), G__get_linked_tagnum(&G__LXeDictLN_stepData), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("stepData", 822, G__LXeDict_169_0_2, (int) ('i'), G__get_linked_tagnum(&G__LXeDictLN_stepData), -1, 0, 1, 1, 1, 0, "u 'stepData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~stepData", 948, G__LXeDict_169_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LXeDict_169_0_4, (int) ('u'), G__get_linked_tagnum(&G__LXeDictLN_stepData), -1, 1, 1, 1, 1, 0, "u 'stepData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEtrackDatacOallocatorlEtrackDatagRsPgR(void) {
   /* vector<trackData,allocator<trackData> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR));
   G__memfunc_setup("at",213,G__LXeDict_171_0_1, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), G__defined_typename("vector<trackData,allocator<trackData> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LXeDict_171_0_2, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), G__defined_typename("vector<trackData,allocator<trackData> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LXeDict_171_0_3, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LXeDict_171_0_4, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LXeDict_171_0_5, 117, G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR), G__defined_typename("vector<trackData,allocator<trackData> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LXeDict_171_0_6, 117, G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR), G__defined_typename("vector<trackData,allocator<trackData> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LXeDict_171_0_7, 107, -1, G__defined_typename("vector<trackData,allocator<trackData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LXeDict_171_0_8, 107, -1, G__defined_typename("vector<trackData,allocator<trackData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LXeDict_171_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LXeDict_171_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<trackData,allocator<trackData> >::size_type' 0 - sz u 'trackData' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LXeDict_171_0_11, 107, -1, G__defined_typename("vector<trackData,allocator<trackData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LXeDict_171_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LXeDict_171_0_13, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), G__defined_typename("vector<trackData,allocator<trackData> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LXeDict_171_0_14, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), G__defined_typename("vector<trackData,allocator<trackData> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<trackData,allocator<trackData> >",3762,G__LXeDict_171_0_15, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<trackData,allocator<trackData> >",3762,G__LXeDict_171_0_16, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n u 'trackData' - 11 'trackData()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<trackData,allocator<trackData> >",3762,G__LXeDict_171_0_17, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<trackData,allocator<trackData> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<trackData,allocator<trackData> >",3762,G__LXeDict_171_0_18, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<trackData,allocator<trackData> >::iterator' 'vector<trackData,allocator<trackData> >::const_iterator' 10 - first u 'vector<trackData,allocator<trackData> >::iterator' 'vector<trackData,allocator<trackData> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LXeDict_171_0_19, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<trackData,allocator<trackData> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LXeDict_171_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LXeDict_171_0_21, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LXeDict_171_0_22, 117, G__get_linked_tagnum(&G__LXeDictLN_trackData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LXeDict_171_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'trackData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LXeDict_171_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<trackData,allocator<trackData> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_171_0_25, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<trackData,allocator<trackData> >::iterator' - 0 - position u 'trackData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_171_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<trackData,allocator<trackData> >::iterator' - 0 - position u 'vector<trackData,allocator<trackData> >::iterator' 'vector<trackData,allocator<trackData> >::const_iterator' 10 - first "
"u 'vector<trackData,allocator<trackData> >::iterator' 'vector<trackData,allocator<trackData> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_171_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<trackData,allocator<trackData> >::iterator' - 0 - position k - 'vector<trackData,allocator<trackData> >::size_type' 0 - n "
"u 'trackData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LXeDict_171_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LXeDict_171_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<trackData,allocator<trackData> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LXeDict_171_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<trackData,allocator<trackData> >::iterator' - 0 - first u 'vector<trackData,allocator<trackData> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LXeDict_171_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<trackData,allocator<trackData> >", 3888, G__LXeDict_171_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEstepDatacOallocatorlEstepDatagRsPgR(void) {
   /* vector<stepData,allocator<stepData> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR));
   G__memfunc_setup("at",213,G__LXeDict_175_0_1, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), G__defined_typename("vector<stepData,allocator<stepData> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__LXeDict_175_0_2, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), G__defined_typename("vector<stepData,allocator<stepData> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__LXeDict_175_0_3, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__LXeDict_175_0_4, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__LXeDict_175_0_5, 117, G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR), G__defined_typename("vector<stepData,allocator<stepData> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__LXeDict_175_0_6, 117, G__get_linked_tagnum(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR), G__defined_typename("vector<stepData,allocator<stepData> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__LXeDict_175_0_7, 107, -1, G__defined_typename("vector<stepData,allocator<stepData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__LXeDict_175_0_8, 107, -1, G__defined_typename("vector<stepData,allocator<stepData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LXeDict_175_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__LXeDict_175_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<stepData,allocator<stepData> >::size_type' 0 - sz u 'stepData' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__LXeDict_175_0_11, 107, -1, G__defined_typename("vector<stepData,allocator<stepData> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__LXeDict_175_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LXeDict_175_0_13, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), G__defined_typename("vector<stepData,allocator<stepData> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__LXeDict_175_0_14, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), G__defined_typename("vector<stepData,allocator<stepData> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<stepData,allocator<stepData> >",3584,G__LXeDict_175_0_15, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<stepData,allocator<stepData> >",3584,G__LXeDict_175_0_16, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n u 'stepData' - 11 'stepData()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<stepData,allocator<stepData> >",3584,G__LXeDict_175_0_17, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<stepData,allocator<stepData> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<stepData,allocator<stepData> >",3584,G__LXeDict_175_0_18, 105, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<stepData,allocator<stepData> >::iterator' 'vector<stepData,allocator<stepData> >::const_iterator' 10 - first u 'vector<stepData,allocator<stepData> >::iterator' 'vector<stepData,allocator<stepData> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__LXeDict_175_0_19, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<stepData,allocator<stepData> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__LXeDict_175_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__LXeDict_175_0_21, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__LXeDict_175_0_22, 117, G__get_linked_tagnum(&G__LXeDictLN_stepData), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__LXeDict_175_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'stepData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__LXeDict_175_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<stepData,allocator<stepData> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_175_0_25, 117, G__get_linked_tagnum(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<stepData,allocator<stepData> >::iterator' - 0 - position u 'stepData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_175_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<stepData,allocator<stepData> >::iterator' - 0 - position u 'vector<stepData,allocator<stepData> >::iterator' 'vector<stepData,allocator<stepData> >::const_iterator' 10 - first "
"u 'vector<stepData,allocator<stepData> >::iterator' 'vector<stepData,allocator<stepData> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__LXeDict_175_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<stepData,allocator<stepData> >::iterator' - 0 - position k - 'vector<stepData,allocator<stepData> >::size_type' 0 - n "
"u 'stepData' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__LXeDict_175_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LXeDict_175_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<stepData,allocator<stepData> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__LXeDict_175_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<stepData,allocator<stepData> >::iterator' - 0 - first u 'vector<stepData,allocator<stepData> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__LXeDict_175_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<stepData,allocator<stepData> >", 3710, G__LXeDict_175_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLXeDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLXeDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLXeDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_trackData = { "trackData" , 115 , -1 };
G__linked_taginfo G__LXeDictLN_stepData = { "stepData" , 115 , -1 };
G__linked_taginfo G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR = { "vector<trackData,allocator<trackData> >" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator = { "vector<trackData,allocator<trackData> >::iterator" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<trackData,allocator<trackData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR = { "vector<stepData,allocator<stepData> >" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator = { "vector<stepData,allocator<stepData> >::iterator" , 99 , -1 };
G__linked_taginfo G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<stepData,allocator<stepData> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLXeDict() {
  G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LXeDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LXeDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LXeDictLN_trackData.tagnum = -1 ;
  G__LXeDictLN_stepData.tagnum = -1 ;
  G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR.tagnum = -1 ;
  G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator.tagnum = -1 ;
  G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR.tagnum = -1 ;
  G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator.tagnum = -1 ;
  G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLXeDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LXeDictLN_trackData),sizeof(trackData),-1,262144,(char*)NULL,G__setup_memvartrackData,G__setup_memfunctrackData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LXeDictLN_stepData),sizeof(stepData),-1,262144,(char*)NULL,G__setup_memvarstepData,G__setup_memfuncstepData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgR),sizeof(vector<trackData,allocator<trackData> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEtrackDatacOallocatorlEtrackDatagRsPgR,G__setup_memfuncvectorlEtrackDatacOallocatorlEtrackDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_reverse_iteratorlEvectorlEtrackDatacOallocatorlEtrackDatagRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgR),sizeof(vector<stepData,allocator<stepData> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEstepDatacOallocatorlEstepDatagRsPgR,G__setup_memfuncvectorlEstepDatacOallocatorlEstepDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_vectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__LXeDictLN_reverse_iteratorlEvectorlEstepDatacOallocatorlEstepDatagRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLXeDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupLXeDict()");
  G__set_cpp_environmentLXeDict();
  G__cpp_setup_tagtableLXeDict();

  G__cpp_setup_inheritanceLXeDict();

  G__cpp_setup_typetableLXeDict();

  G__cpp_setup_memvarLXeDict();

  G__cpp_setup_memfuncLXeDict();
  G__cpp_setup_globalLXeDict();
  G__cpp_setup_funcLXeDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLXeDict();
  return;
}
class G__cpp_setup_initLXeDict {
  public:
    G__cpp_setup_initLXeDict() { G__add_setup_func("LXeDict",(G__incsetup)(&G__cpp_setupLXeDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLXeDict() { G__remove_setup_func("LXeDict"); }
};
G__cpp_setup_initLXeDict G__cpp_setup_initializerLXeDict;

